function(link_glfw PROJ_NAME)
	find_package(PkgConfig)

	if(PKG_CONFIG_FOUND)
		pkg_search_module(GLFW glfw3)
	endif()

	if(GLFW_FOUND AND NOT WIN32 AND NOT BUILD_DEPENDENCIES)
		message(STATUS "GLFW found")
		target_include_directories(${PROJ_NAME} PRIVATE ${GLFW_INCLUDE_DIRS})
		target_link_libraries (${PROJ_NAME} ${GLFW_LIBRARIES})
	else()
		if(TARGET glfw)
			message(STATUS "GLFW already included")
		else()
			message(STATUS "GLFW not found, building from source")
			execute_process(COMMAND git submodule update --init -- vendor/glfw
				WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_QUIET)
			execute_process(COMMAND git checkout 3.2.1
				WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/vendor/glfw OUTPUT_QUIET)
			set(GLFW_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/vendor/glfw/include CACHE PATH "glfw3 include directory" FORCE)
			set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
			set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
			set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
			add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/vendor/glfw EXCLUDE_FROM_ALL)
		endif()
		add_dependencies(${PROJ_NAME} glfw)
		target_link_libraries(${PROJ_NAME} glfw)
		target_include_directories(${PROJ_NAME} PRIVATE ${GLFW_INCLUDE_DIRS})
	endif()
endfunction()
